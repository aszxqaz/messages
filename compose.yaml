name: messages
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    # ports:
    #   - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: broker1
    container_name: broker1
    depends_on:
      - zookeeper
    # ports:
    #   - "29092:29092"
    #   - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_MIN_INSYNC_REPLICAS: 2
    healthcheck:
      test: [ "CMD-SHELL", "nc -z -w 3 broker1 29092" ]
      retries: 1
      start_period: 10s

  broker2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: broker2
    container_name: broker2
    depends_on:
      - zookeeper
    # ports:
    #   - "29092:29092"
    #   - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_MIN_INSYNC_REPLICAS: 2
    healthcheck:
      test: [ "CMD-SHELL", "nc -z -w 3 broker2 29092" ]
      retries: 1
      start_period: 10s

  broker3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: broker3
    container_name: broker3
    depends_on:
      - zookeeper
    # ports:
    #   - "29092:29092"
    #   - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:29092,PLAINTEXT_HOST://localhost:9094
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_MIN_INSYNC_REPLICAS: 2
    healthcheck:
      test: [ "CMD-SHELL", "nc -z -w 3 broker3 29092" ]
      retries: 1
      start_period: 10s

  kafdrop:
    image: obsidiandynamics/kafdrop:3.31.0
    container_name: kafdrop
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: broker1:29092,broker2:29092,broker3:29092
    depends_on:
      broker1:
        condition: service_healthy
      broker2:
        condition: service_healthy
      broker3:
        condition: service_healthy

  database:
    image: postgres:15
    container_name: database
    environment:
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./database/schema:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  api:
    container_name: api
    depends_on:
      broker1:
        condition: service_healthy
      broker2:
        condition: service_healthy
      broker3:
        condition: service_healthy
      database:
        condition: service_started
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - 8080:8080
    environment:
      DB_USER: postgres
      DB_NAME: postgres
      DB_HOST: database
      DB_PORT: 5432
      DB_PASSWORD: postgres
      KAFKA_SERVERS: broker1:29092,broker2:29092,broker3:29092

  consumer:
    container_name: consumer
    depends_on:
      broker1:
        condition: service_healthy
      broker2:
        condition: service_healthy
      broker3:
        condition: service_healthy
      database:
        condition: service_started
    build:
      context: .
      dockerfile: consumer/Dockerfile
    environment:
      DB_USER: postgres
      DB_NAME: postgres
      DB_HOST: database
      DB_PORT: 5432
      DB_PASSWORD: postgres
      KAFKA_SERVERS: broker1:29092,broker2:29092,broker3:29092
      CONSUMERS_COUNT: 3
  #
  # pgadmin:
  #   image: dpage/pgadmin4:8.9
  #   container_name: pgadmin4
  #   restart: always
  #   ports:
  #     - 8888:80
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com
  #     PGADMIN_DEFAULT_PASSWORD: pgadmin
